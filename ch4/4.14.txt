            Generic                Specific
Stage       popq rA                popq %rax
-----------------------------------------------------------------
Fetch       icode:ifun <-- M1[PC]  icode:ifun <-- M1[0x02c] = b:0
            rA:rB <-- M1[PC + 1]   rA:rB <-- M1[0x02d] = 0:f
            valP <-- PC + 2        valP <-- 0x02c + 0x2 = 0x02e
Decode      valA <-- R[%rsp]       valA <-- R[%rsp] = 120
            valB <-- R[%rsp]       valB <-- R[%rsp] = 120
Execute     valE <-- valB + 8      valE <-- 120 + 8 = 128
Memory      valM <-- M8[valA]      valM <-- M8[120] = 9
Write back  R[%rsp] <-- valE       R[%rsp] <-- valE = 128
            R[rA] <-- valM         R[%rax] <-- valM = 9
PC update   PC <-- valP            Pc <-- valP = 0x02e

This instructions increments %rsp by 8, sets %rax to the value M[R[%rsp]] = 9,
and increments the program counter by 2.
