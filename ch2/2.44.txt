A: (x > 0) || (x - 1 < 0)
Not true for x = -2^16.

B: (x & 7) != 7 || (x << 29 < 0)
If x has one or more zeros in its 3 lowest-order bits, then (x & 7) != 7. If not,
then x << 29 = 0xE00...0 = -2^29 < 0. So always true.

C: (x * x) >= 0
Not true for x = 2^8.

D: x < 0 || -x <= 0
If x = -2^16, ..., -1, then x < 0 is true. Otherwise, x = 0, ..., 2^16-1, and so
-x <= 0. So always true.

E: x > 0 || -x >= 0
Not true for x = -2^16.

F: x + y == uy + ux
The sums are bit-wise equivalent, so the result of x + y is cast to an unsigned
integer, and then the result is always true.

G: x * ~y + uy * ux == -x
~y is equivalent to -y - 1. uy * ux is equivalent to x * y. So the left hand side
is equivalent to x * (-y - 1) + x * y = -x.
